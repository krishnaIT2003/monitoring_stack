version: '3.7'

services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3200:3000"
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST}
      - GF_SMTP_USER=${SMTP_USER}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${SMTP_USER}
      - GF_SMTP_FROM_NAME=monitoring
      - GF_SMTP_SKIP_VERIFY=true
    volumes:
      - ./configs/grafana:/var/lib/grafana
      - ./configs/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./configs/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./configs/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring-network
    restart: always
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./configs/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - monitoring-network
    restart: always
  
  loki:
    image: grafana/loki:2.9.1
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./configs/loki/loki.yml:/etc/loki/loki.yml
    networks:
      - monitoring-network
    restart: always

  
  promtail:
    image: grafana/promtail
    container_name: promtail
    volumes:
      - ./configs/promtail/promtail.yml:/etc/promtail/promtail.yml
      - /var/log:/var/log
      - /etc/hostname:/etc/host_hostname
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - monitoring-network
    restart: always
    command: -config.file=/etc/promtail/promtail.yml

  
  alertmanager:
    image: quay.io/prometheus/alertmanager:v0.26.0
    container_name: monitoring-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./configs/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - monitoring-network
    restart: always
  
  telegraf:
    image: telegraf:1.29
    container_name: telegraf1
    privileged: true
    group_add:
      - "1001"
    restart: always
    entrypoint: ["/bin/sh", "-c", "exec telegraf --config /etc/telegraf/telegraf.conf"]
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/hostfs/sys:ro
      - /:/hostfs:ro
    ports:
      - "9273:9273"
    environment:
      - HOST_ETC=/hostfs/etc
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_MOUNT_PREFIX=/hostfs
    networks:
      - monitoring-network



      # SYSTEM EXPORTER

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    ports:
      - "9100:9100"
    pid: "host"
    # network_mode: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/node-exporter:/etc/node-exporter 
    networks:
      - monitoring-network
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)'
      - '--collector.textfile.directory=/etc/node-exporter'

# ============= DB EXPORTERS =======================
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://search_sandbox:search_sandbox@14.192.1.134:5432/search_sandbox?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - monitoring-network
    restart: always

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    environment:
      - REDIS_ADDR=redis://14.192.1.134:6379
    ports:
      - "9121:9121"
    networks:
      - monitoring-network
    restart: always


  elasticsearch-exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
    container_name: elasticsearch-exporter
    environment:
      - ES_URI=http://172.168.168.253:9200
    ports:
      - "9114:9114"
    networks:
      - monitoring-network
    restart: always

  clickhouse-exporter:
    image: f1yegor/clickhouse-exporter:latest
    container_name: clickhouse-exporter
    environment:
      - CLICKHOUSE_USER=analytics
      - CLICKHOUSE_PASSWORD=analytics
      - CLICKHOUSE_SERVER=http://14.192.1.134:8123
    ports:
      - "9116:9116"
    networks:
      - monitoring-network
    restart: always

networks:
  monitoring-network: